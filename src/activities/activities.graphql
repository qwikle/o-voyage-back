scalar Time

type Activity {
  "The id of the activity"
  id: Int!
  "The name of the activity"
  name: String!
  "The price of the activity"
  price: Int!
  "The location of the activity"
  location: String!
  "The member of the activity"
  member: Int!
  "The time of the activity"
  time: Time! 
  "The date of the activity"
  date: Date! 
  "The travel_id of the activity"
  travel_id: Int!
}

input CreateActivityInput {
  id: Int!
  name: String!
  price: Int!
  location: String!
  member: Int!
  time: String!
  date: Date!
  travel_id: Int!
}

input UpdateActivityInput {
  id: Int!
  name: String
  price: Int
  location: String
  member: Int
  time: String
  date: Date
  travel_id: Int
}

type Query {
  activities: [Activity]!
  activity(id: Int!): Activity
}

type Mutation {
  createActivity(createActivityInput: CreateActivityInput!): Activity!
  updateActivity(updateActivityInput: UpdateActivityInput!): Activity!
  removeActivity(id: Int!): Activity
}
