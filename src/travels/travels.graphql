type Travel {
  "The id of the travel"
  id: Int!
  "The title of the travel"
  title: String!
  "The from of the travel"
  from: String!
  "The to of the travel"
  to: String!
  "The departureDate of the travel"
  departureDate: String! # Date!
  "The arrivalDate of the travel"
  arrivalDate: String! # Date!
  "The budget of the travel"
  budget: Int!
  "The numberOfAttendees of the travel"
  numberOfAttendees: Int!
  "relation user - travel"
  organizerId: Int!
  "organizer of the travel"
  organizer: Attendee!
  "Attendees of the travel"
  attendees: [Attendee!]!
}

type Attendee {
  id: Int!
  firstname: String!
  lastname: String!
  email: String!
}

input CreateTravelInput {
  name: String!
  from: String!
  to: String!
  departure_date: String!
  arrival_date: String!
  budget: Int!
  attendees: Int!
}

input UpdateTravelInput {
  id: Int!
}

type Query {
  travels: [Travel]!
  travel(id: Int!): Travel
}

type Mutation {
  createTravel(createTravelInput: CreateTravelInput!): Travel!
  updateTravel(updateTravelInput: UpdateTravelInput!): Travel!
  removeTravel(id: Int!): Travel
}
