scalar Email
scalar Password

type User {
  id: Int!
  email: Email!
  firstname: String!
  lastname: String!
  isBanned: Boolean!
  Role: Role!
}

type Role {
  id: Int!
  name: String!
}

input CreateUserInput {
  email: Email!
  firstname: String!
  lastname: String!
  password: Password!
  confirmPassword: String!
}

input UpdateUserInput {
  id: Int!
  email: Email
  firstname: String
  lastname: String
  password: Password
  confirmPassword: String
  # isBanned: Boolean
  # roleId: Int
}

type Query {
  users: [User]!
  user(id: Int!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User
}
